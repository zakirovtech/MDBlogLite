version: '3.7'

services:
  web:
    build:
      context: ./
      dockerfile: Dockerfile
    image: mdblog
    container_name: blog
    env_file:
      - ./env/.env
    ports:
    - 8000:8000
    volumes:
      - ./:/usr/app/src/
    restart: always
    depends_on:
      - db
      - cache
    command: "bash ./scripts/entrypoint.sh"
    networks:
      - backend

  db:
    image: postgres:15-alpine
    container_name: blog_db
    ports:
      - 5432:5432
    restart: always
    env_file:
      - ./env/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  cache:
    image: redis:latest
    container_name: blog_cache
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
      - ./env/.env
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - backend

  nginx:
    image: nginx:alpine
    container_name: blog_nginx
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - ./env/.env
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - web
      - certbot
    networks:
      - backend

  certbot:
    image: certbot/certbot:latest
    container_name: blog_certbot
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    networks:
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  backend:
    driver: bridge
    name: backend
