version: '3.7'

services:
  web:
    build:
      context: ./
      dockerfile: Dockerfile
    image: mdblog
    container_name: blog
    env_file:
      - ./env/.env
    volumes:
      - ./:/usr/app/src/
    restart: always
    depends_on:
      - db
      - cache
    command: "bash ./scripts/entrypoint.sh"
    networks:
      - backend_network
      - nginx_network

  db:
    image: postgres:15-alpine
    container_name: blog_db
    restart: always
    env_file:
      - ./env/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_network

  cache:
    image: redis:latest
    container_name: blog_cache
    restart: always
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
      - ./env/.env
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - backend_network

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    env_file:
      - ./env/.env
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
      - ./certbot/init.sh:/usr/utils/init.sh:rwx
    depends_on:
      - nginx
    entrypoint: >
      sh -c "/usr/utils/init.sh"
    networks:
      - backend_network

  celery_worker:
    restart: always
    build: .
    image: celery_worker
    container_name: celery_worker
    volumes:
      - ./:/usr/app/src
    env_file:
      - ./env/.env
    depends_on:
      - db
      - cache
      - web
    command: 'celery -A config worker -l info'
    networks:
      - backend_network

volumes:
  postgres_data:

networks:
  backend_network:
    driver: bridge
    name: backend_network
  nginx_network:
    external: true
